From 1111111111111111111111111111111111111111 Mon Sep 17 00:00:00 2001
From: ChatGPT Bot <bot@example.com>
Date: Wed, 8 Oct 2025 03:30:00 +0800
Subject: [PATCH] Bootstrap CI smoke test and mobile.css scaffold

---
 .gitignore             | 24 ++++++++++++++++++++++++
 README-dev.md          | 33 +++++++++++++++++++++++++++++++++
 static/mobile.css      | 74 ++++++++++++++++++++++++++++++++++++++++++++++++++
 tests/test_smoke.py    | 35 ++++++++++++++++++++++++++++++++
 4 files changed, 166 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 README-dev.md
 create mode 100644 static/mobile.css
 create mode 100644 tests/test_smoke.py

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,24 @@
+# Python
+__pycache__/
+*.py[cod]
+*.pyo
+.pytest_cache/
+.venv/
+venv/
+.env
+.DS_Store
+
+# Flask / local
+instance/
+*.db
+*.sqlite3
+
+# Logs
+logs/
+*.log
+
+# Node / web (if any)
+node_modules/
+dist/
+build/
+
diff --git a/README-dev.md b/README-dev.md
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/README-dev.md
@@ -0,0 +1,33 @@
+# Developer Notes
+
+This repo now includes:
+
+1) **CI smoke test** via `tests/test_smoke.py`. It never fails your build,
+   but reports basic environment info to keep the pipeline green while
+   we incrementally add real tests.
+
+2) **`static/mobile.css`**: a small, responsive stylesheet you can link
+   from your base template to improve mobile readability.
+
+## Linking the mobile CSS (optional but recommended)
+Add this `<link>` into your base HTML `<head>`:
+
+```html
+<link rel="stylesheet" href="{{ url_for('static', filename='mobile.css') }}">
+<meta name="viewport" content="width=device-width, initial-scale=1">
+```
+
+If your project does not use Flask templates, just serve the file statically.
+
+## Next steps
+- I (ChatGPT) will start proposing functional patches via the new
+  auto-patch workflow so you don’t have to copy/paste diffs.
+- Once we agree on a testing strategy, we’ll replace the smoke test with
+  real unit tests (data loading, routes, template rendering).
+
diff --git a/static/mobile.css b/static/mobile.css
new file mode 100644
index 0000000..3333333
--- /dev/null
+++ b/static/mobile.css
@@ -0,0 +1,74 @@
+/* Mobile-first readability improvements */
+html, body {
+  margin: 0;
+  padding: 0;
+  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
+               Ubuntu, Cantarell, "Helvetica Neue", "Noto Sans", Arial, sans-serif;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+
+/* Layout container helpers */
+.container {
+  max-width: 1100px;
+  margin: 0 auto;
+  padding: 0 16px;
+}
+
+/* Tables readable on phones */
+table {
+  width: 100%;
+  border-collapse: collapse;
+  font-size: 14px;
+}
+th, td {
+  padding: 8px 10px;
+  border-bottom: 1px solid #eee;
+  text-align: left;
+}
+thead th {
+  position: sticky;
+  top: 0;
+  background: #fff;
+}
+
+/* Cards for key stats */
+.card {
+  border: 1px solid #e5e7eb;
+  border-radius: 8px;
+  padding: 12px;
+  margin: 10px 0;
+  box-shadow: 0 1px 2px rgba(0,0,0,0.04);
+}
+
+/* Responsive headings & spacing */
+h1 { font-size: 1.6rem; margin: 16px 0; }
+h2 { font-size: 1.3rem; margin: 14px 0; }
+h3 { font-size: 1.1rem; margin: 12px 0; }
+p  { line-height: 1.55; }
+
+/* Buttons */
+.btn {
+  display: inline-block;
+  padding: 8px 12px;
+  border-radius: 6px;
+  border: 1px solid #d1d5db;
+  background: #f9fafb;
+  text-decoration: none;
+}
+.btn:hover { background: #f3f4f6; }
+
+/* Narrow screens: shrink padding, allow horizontal scroll for wide tables */
+@media (max-width: 640px) {
+  .container { padding: 0 10px; }
+  table { display: block; overflow-x: auto; white-space: nowrap; }
+  th, td { padding: 6px 8px; }
+  h1 { font-size: 1.3rem; }
+  h2 { font-size: 1.15rem; }
+  h3 { font-size: 1.0rem; }
+}
+
diff --git a/tests/test_smoke.py b/tests/test_smoke.py
new file mode 100644
index 0000000..4444444
--- /dev/null
+++ b/tests/test_smoke.py
@@ -0,0 +1,35 @@
+import os
+import sys
+import importlib
+
+def test_ci_pipeline_is_alive():
+    """Keep CI green while we wire up the patch workflow."""
+    python = sys.version.split()[0]
+    cwd = os.getcwd()
+    print(f"[smoke] Python={python} CWD={cwd}")
+    assert True
+
+def test_optional_flask_import():
+    """Try import app.py if present; non-fatal on failure."""
+    try:
+        spec = importlib.util.spec_from_file_location("app", os.path.join(os.getcwd(), "app.py"))
+        if spec and spec.loader:
+            mod = importlib.util.module_from_spec(spec)
+            spec.loader.exec_module(mod)
+            _ = getattr(mod, "app", None)
+    except Exception as e:
+        print(f"[smoke] optional import failed: {e!r}")
+        assert True
-- 
2.39.3
